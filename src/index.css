@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Base color palette */
    --gray-50: 249 250 251;
    --gray-100: 243 244 246;
    --gray-200: 229 231 235;
    --gray-300: 209 213 219;
    --gray-400: 156 163 175;
    --gray-500: 107 114 128;
    --gray-600: 75 85 99;
    --gray-700: 55 65 81;
    --gray-800: 31 41 55;
    --gray-900: 17 24 39;

    /* Theme colors - Light mode (default) */
    --bg-primary: var(--gray-50);
    --bg-secondary: 255 255 255;
    --bg-tertiary: var(--gray-100);
    --text-primary: var(--gray-900);
    --text-secondary: var(--gray-600);
    --text-muted: var(--gray-500);
    --border-color: var(--gray-200);
    --border-secondary: var(--gray-300);
    --accent-primary: 59 130 246;
    --accent-secondary: 147 197 253;
    --accent-hover: 29 78 216;

    /* Status colors - Light mode */
    --success-bg: 34 197 94;
    --success-color: 22 163 74;
    --error-bg: 239 68 68;
    --error-color: 220 38 38;
    --warning-bg: 245 158 11;
    --warning-color: 217 119 6;
  }

  /* Dark theme colors */
  .dark {
    --bg-primary: var(--gray-900);
    --bg-secondary: var(--gray-800);
    --bg-tertiary: var(--gray-700);
    --text-primary: var(--gray-50);
    --text-secondary: var(--gray-300);
    --text-muted: var(--gray-400);
    --border-color: var(--gray-600);
    --border-secondary: var(--gray-500);
    --accent-primary: 96 165 250;
    --accent-secondary: 147 197 253;
    --accent-hover: 147 197 253;

    /* Status colors - Dark mode */
    --success-bg: 34 197 94;
    --success-color: 74 222 128;
    --error-bg: 239 68 68;
    --error-color: 252 165 165;
    --warning-bg: 245 158 11;
    --warning-color: 251 191 36;
  }

  /* Ensure CSS variables are inherited by all elements including modals */
  * {
    color-scheme: light;
  }

  .dark * {
    color-scheme: dark;
  }

  /* Force CSS variable inheritance for modal contexts */
  .modal, .modal *, [role="dialog"], [role="dialog"] *,
  .fixed, .fixed *, .z-50, .z-50 *,
  .modal *, .modal * * {
    --bg-primary: var(--bg-primary) !important;
    --bg-secondary: var(--bg-secondary) !important;
    --bg-tertiary: var(--bg-tertiary) !important;
    --text-primary: var(--text-primary) !important;
    --text-secondary: var(--text-secondary) !important;
    --text-muted: var(--text-muted) !important;
    --border-color: var(--border-color) !important;
    --border-secondary: var(--border-secondary) !important;
    --accent-primary: var(--accent-primary) !important;
    --accent-secondary: var(--accent-secondary) !important;
    --accent-hover: var(--accent-hover) !important;
  }

  html, body, #root {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden;
  }

  body {
    @apply bg-gray-50 text-gray-900;
    background-color: rgb(var(--bg-primary));
    color: rgb(var(--text-primary));
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  /* Override Tailwind's default colors with CSS variables */
  .bg-gray-50 { background-color: rgb(var(--bg-primary)) !important; }
  .bg-gray-100 { background-color: rgb(var(--bg-tertiary)) !important; }
  .bg-white { background-color: rgb(var(--bg-secondary)) !important; }
  .bg-gray-800 { background-color: rgb(var(--bg-secondary)) !important; }

  .text-gray-900 { color: rgb(var(--text-primary)) !important; }
  .text-gray-800 { color: rgb(var(--text-primary)) !important; }
  .text-gray-700 { color: rgb(var(--text-secondary)) !important; }
  .text-gray-600 { color: rgb(var(--text-secondary)) !important; }
  .text-gray-500 { color: rgb(var(--text-muted)) !important; }

  .border-gray-200 { border-color: rgb(var(--border-color)) !important; }
  .border-gray-300 { border-color: rgb(var(--border-secondary)) !important; }
  .border-gray-600 { border-color: rgb(var(--border-secondary)) !important; }
  .border-gray-700 { border-color: rgb(var(--border-color)) !important; }

  /* Dark mode overrides */
  .dark .bg-gray-50 { background-color: rgb(var(--bg-primary)); }
  .dark .bg-gray-100 { background-color: rgb(var(--bg-tertiary)); }
  .dark .bg-white { background-color: rgb(var(--bg-secondary)); }
  .dark .bg-gray-800 { background-color: rgb(var(--bg-secondary)); }

  .dark .text-gray-900 { color: rgb(var(--text-primary)); }
  .dark .text-gray-800 { color: rgb(var(--text-primary)); }
  .dark .text-gray-700 { color: rgb(var(--text-secondary)); }
  .dark .text-gray-600 { color: rgb(var(--text-secondary)); }
  .dark .text-gray-500 { color: rgb(var(--text-muted)); }

  /* Form elements */
  select, input, textarea {
    background-color: rgb(var(--bg-secondary));
    color: rgb(var(--text-primary));
    border-color: rgb(var(--border-color));
  }

  select:focus, input:focus, textarea:focus {
    outline: 2px solid rgb(var(--accent-primary));
    outline-offset: 2px;
  }

  /* Select dropdown options */
  select option {
    background-color: rgb(var(--bg-secondary));
    color: rgb(var(--text-primary));
  }

  /* Checkbox and radio button styling */
  input[type="checkbox"], input[type="radio"] {
    accent-color: rgb(var(--accent-primary));
  }

  /* Dark mode form elements */
  .dark select, .dark input, .dark textarea {
    background-color: rgb(var(--bg-secondary));
    color: rgb(var(--text-primary));
    border-color: rgb(var(--border-color));
  }

  .dark select option {
    background-color: rgb(var(--bg-secondary));
    color: rgb(var(--text-primary));
  }

  .dark input[type="checkbox"], .dark input[type="radio"] {
    accent-color: rgb(var(--accent-primary));
  }
}

@layer components {
  /* Animation keyframes */
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  @keyframes pulse-ring {
    0% {
      transform: scale(0.33);
    }
    40%, 50% {
      opacity: 1;
    }
    100% {
      opacity: 0;
      transform: scale(1.2);
    }
  }

  @keyframes shine {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }

  /* Custom scrollbar */
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: rgb(var(--text-muted)) transparent;
  }

  .custom-scrollbar::-webkit-scrollbar {
    width: 6px;
  }

  .custom-scrollbar::-webkit-scrollbar-track {
    background: transparent;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb {
    background-color: rgb(var(--text-muted));
    border-radius: 3px;
  }

  .custom-scrollbar::-webkit-scrollbar-thumb:hover {
    background-color: rgb(var(--text-secondary));
  }

  /* Track list animations */
  .track-enter {
    animation: trackEnter 0.3s ease-out;
  }

  @keyframes trackEnter {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* 3D visualization styles */
  .visualization-container {
    perspective: 1000px;
    transform-style: preserve-3d;
  }

  .coordinate-grid {
    background-image:
      linear-gradient(rgba(var(--text-muted), 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(var(--text-muted), 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
  }

  /* Animation preview dot */
  .animation-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: currentColor;
    position: relative;
  }

  .animation-dot::before {
    content: '';
    position: absolute;
    top: -4px;
    left: -4px;
    right: -4px;
    bottom: -4px;
    border: 1px solid currentColor;
    border-radius: 50%;
    animation: pulse-ring 2s cubic-bezier(0.455, 0.03, 0.515, 0.955) infinite;
  }

  /* Control panel styles */
  .control-panel {
    background: rgba(var(--bg-secondary), 0.95);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(var(--bg-secondary), 0.2);
  }

  /* Status indicators */
  .status-indicator {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: 4px 8px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: 500;
  }

  .status-indicator::before {
    content: '';
    width: 6px;
    height: 6px;
    border-radius: 50%;
    margin-right: 6px;
    background: currentColor;
  }

  .status-connected {
    background: rgba(var(--success-bg), 0.1);
    color: rgb(var(--success-color));
  }

  .status-disconnected {
    background: rgba(var(--error-bg), 0.1);
    color: rgb(var(--error-color));
  }

  .status-warning {
    background: rgba(var(--warning-bg), 0.1);
    color: rgb(var(--warning-color));
  }

  /* Timeline styles */
  .timeline-track {
    height: 32px;
    border-radius: 4px;
    margin: 2px 0;
    position: relative;
    overflow: hidden;
  }

  .timeline-keyframe {
    position: absolute;
    width: 8px;
    height: 8px;
    background: currentColor;
    border-radius: 50%;
    cursor: pointer;
    transform: translateX(-50%);
  }

  .timeline-keyframe:hover {
    transform: translateX(-50%) scale(1.2);
  }

  /* Animation curve editor */
  .curve-editor {
    position: relative;
    background: rgb(var(--bg-tertiary));
    border-radius: 8px;
    overflow: hidden;
  }

  .curve-path {
    fill: none;
    stroke: rgb(var(--accent-primary));
    stroke-width: 2;
  }

  .curve-control-point {
    fill: rgb(var(--accent-primary));
    cursor: pointer;
  }

  .curve-control-point:hover {
    fill: rgb(var(--accent-hover));
    transform: scale(1.1);
  }

  /* Responsive breakpoints */
  @media (max-width: 640px) {
    .mobile-hidden {
      display: none;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .control-panel {
      background: rgb(var(--bg-secondary));
      border: 2px solid rgb(var(--text-primary));
    }
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
}
