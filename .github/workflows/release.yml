name: Release Build

on:
  push:
    tags:
      - 'v*'  # Matches tags like v1.0.0, v2.1.0, etc.
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    name: Build Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Set up environment
        run: |
          echo "ELECTRON_MIRROR=https://npmmirror.com/mirrors/electron/" >> $GITHUB_ENV
          echo "ELECTRON_CUSTOM_DIR={{ version }}" >> $GITHUB_ENV
          
      - name: Install dependencies with retry
        uses: nick-invision/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 10
          command: npm ci

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libx11-dev \
            libxext-dev \
            libxss-dev \
            libxtst-dev \
            libxkbfile-dev \
            libsecret-1-dev \
            libxcb1-dev \
            libxrandr-dev \
            libatk1.0-dev \
            libatk-bridge2.0-dev \
            libgtk-3-dev \
            libnss3-dev \
            libxss-dev \
            libasound2 \
            libgbm1 \
            libxshmfence1 \
            libarchive-tools \
            xz-utils \
            libssl-dev

      - name: Build application
        run: npm run build

      - name: Ensure app-builder is executable
        run: chmod +x node_modules/app-builder-bin/linux/x64/app-builder

      - name: Build Electron app
        run: npm run build:electron
        env:
          NODE_ENV: production

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: |
            dist/
            release/

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release
          path: release

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Release Notes
            
            - Built from ${{ github.sha }}
            - Built on ${{ github.event.repository.pushed_at }}
          draft: false
          prerelease: false
          files: |
            release/make/*.zip
            release/make/*.exe
            release/make/*.dmg
            release/make/*.AppImage
            release/make/*.deb
            release/make/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
