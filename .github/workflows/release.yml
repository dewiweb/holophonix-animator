name: Build and Release Electron App

on:
  push:
    tags:
      - 'v*'  # Matches tags like v1.0.0, v2.1.0, etc.
  workflow_dispatch:  # Allow manual trigger

env:
  ELECTRON_MIRROR: https://npmmirror.com/mirrors/electron/
  ELECTRON_CUSTOM_DIR: '{{ version }}'
  ELECTRON_USE_PROXY: 'true'
  NODE_OPTIONS: --max-old-space-size=4096
  npm_config_electron_mirror: https://npmmirror.com/mirrors/electron
  npm_config_electron_custom_dir: '{{ version }}'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            build_script: build:linux
            artifact_patterns: |
              release/*.AppImage
              release/*.deb
              release/*.rpm
          - os: windows-latest
            build_script: build:win
            artifact_patterns: |
              release/*.exe
              release/*.blockmap
          - os: macos-latest
            build_script: build:mac
            artifact_patterns: |
              release/*.dmg
              release/*.zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Set npm registry
        run: npm config set registry https://registry.npmjs.org/

      - name: Install dependencies
        run: |
          npm ci
          npm config delete https-proxy
          npm config delete proxy

      - name: Build application
        run: npm run build

      - name: Build and package Electron app
        run: npm run ${{ matrix.build_script }}
        env:
          NODE_ENV: production
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: |
            release/
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: release-*
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Release Notes
            
            - Version: ${{ github.ref_name }}
            - Commit: ${{ github.sha }}
            - Built on: ${{ github.event.repository.pushed_at }}
            
            ### Assets
            - Windows: .exe (Installer) + .blockmap (Differential updates)
            - macOS: .dmg (Installer)
            - Linux: .AppImage (Portable) + .deb (Debian/Ubuntu) + .rpm (Fedora/RedHat)
          draft: false
          prerelease: ${{ contains(github.ref, '-') }}
          files: |
            release/*.exe
            release/*.exe.blockmap
            release/*.dmg
            release/*.zip
            release/*.AppImage
            release/*.deb
            release/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
