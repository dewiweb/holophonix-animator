---
title: Holophonix Animator Architecture
---
%%{init: {
    'theme': 'base',
    'themeVariables': {
        'primaryColor': '#4a90e2',
        'primaryTextColor': '#2A2A2A',
        'primaryBorderColor': '#2F80ED',
        'lineColor': '#666666',
        'secondaryColor': '#73C991',
        'tertiaryColor': '#F4A261'
    }
}}%%
graph TB
    %% Application Context
    subgraph APP["Holophonix Animator Application"]
        direction TB
        
        %% UI Layer Components
        subgraph UI_Layer["User Interface Layer (React/TypeScript)"]
            UI_Motion["Motion Control Interface"]
            UI_Config["Configuration Panel"]
            UI_Preview["Preview Window"]
            UI_Monitor["System Monitor"]
            style UI_Layer fill:#e3f2fd,stroke:#1565c0
        end
        
        %% Core Components
        subgraph Core["Core Services"]
            direction TB
            
            %% Animation Service
            subgraph AS["Animation Service (Rust)"]
                AS_Core["Animation Core Engine"]
                AS_Compute["Computation Modules"]
                AS_State["State Manager"]
                AS_Plugin["Plugin System"]
                style AS fill:#e8f5e9,stroke:#2e7d32
            end
            
            %% Main Process
            subgraph MP["Main Process (Electron/TypeScript)"]
                MP_Bridge["Animation Bridge"]
                MP_Config["Config Manager"]
                MP_OSC["OSC Handler"]
                MP_Diag["Diagnostics"]
                style MP fill:#fff3e0,stroke:#f57c00
            end
            
            style Core fill:#f5f5f5,stroke:#616161
        end

        %% Storage Layer
        subgraph Storage["Storage Layer (JSON)"]
            Config_Store["Config Store (settings.json)"]
            Preset_Store["Preset Store (presets.json)"]
            State_Store["State Store (state.json)"]
            style Config_Store fill:#FFB347,stroke:#F4A261
            style Preset_Store fill:#FFB347,stroke:#F4A261
            style State_Store fill:#FFB347,stroke:#F4A261
            style Storage fill:#fff3e0,stroke:#f57c00
        end
        
        style APP fill:#fafafa,stroke:#424242,stroke-width:2px
    end

    %% External Context
    subgraph EXT["External Environment"]
        direction TB
        
        %% Network Layer
        subgraph NET["Network Layer (Node.js UDP)"]
            NI["Network Interfaces (Auto-detected)"]
            style NI fill:#fad7a0,stroke:#d35400
            style NET fill:#fff8e1,stroke:#ffa000
        end
        
        %% External Systems
        subgraph Systems["External Systems"]
            HS["Holophonix System (OSC)"]
            ES["External Software (OSC)"]
            style HS fill:#d5f5e3,stroke:#196f3d
            style ES fill:#d5f5e3,stroke:#196f3d
            style Systems fill:#e8f5e9,stroke:#388e3c
        end
        
        style EXT fill:#f5f5f5,stroke:#424242,stroke-width:2px
    end

    %% Process Communication
    UI_Layer -.-> |"IPC Events (Electron)"| MP
    MP -.-> |"FFI Bridge (Rust)"| AS
    
    %% Connections within Application
    UI_Motion --> MP_Bridge
    UI_Config --> MP_Config
    UI_Preview --> MP_Bridge
    UI_Monitor --> MP_Diag
    MP_Bridge --> AS_Core
    AS_Core --> AS_Compute
    AS_Core --> AS_State
    AS_Core --> AS_Plugin
    
    %% Storage Connections
    MP_Config --> Config_Store
    AS_State --> State_Store
    MP --> Preset_Store

    %% Connections crossing boundaries
    NI -.-> |"Interface Selection"| MP_OSC
    MP_OSC -.-> |"Commands & Queries (UDP 4003)"| HS
    HS -.-> |"Responses & Status (UDP 9000)"| MP_OSC
    ES -.-> |"Control Messages (UDP 9000)"| MP_OSC
%% Framework Notes
%% - UI: React + TypeScript for responsive interface
%% - Main Process: Electron + TypeScript for desktop integration
%% - Animation Service: Rust for high-performance computation
%% - Network: Node.js UDP for OSC communication
%% - Storage: JSON files for persistent state
%% - IPC: Electron IPC for UI-Main communication
%% - Bridge: Rust FFI for Main-Animation communication
